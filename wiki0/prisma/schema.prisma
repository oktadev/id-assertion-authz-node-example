// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../../node_modules/@prisma/client/wiki"
}

datasource db {
  provider = "mysql"
  url      = env("WIKI_DATABASE_URL")
}

model Article {
  id        Int     @id @default(autoincrement())
  title     String
  content   String @db.LongText

  createdAt DateTime @default(now())


  // User has many articles
  user      User   @relation(fields: [userId], references: [id])
  userId    Int

  // Org has many articles
  org       Organization    @relation(fields: [orgId], references: [id])
  orgId     Int
}

model Organization {
  id       Int    @id @default(autoincrement())
  domain    String @unique
  name String
  User     User[]
  Article  Article[]
  AuthorizationToken  AuthorizationToken[]
  RequestLog  RequestLog[]

  // Auth server fields
  auth_server_key        String @default("") @unique
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name String
  externalId String?

  org       Organization    @relation(fields: [orgId], references: [id])
  orgId     Int

  @@unique([orgId, externalId])

  Article  Article[]
  AuthorizationToken  AuthorizationToken[]
  RequestLog  RequestLog[]
}

enum TokenStatus {
  ACTIVE
  REFRESHING
}

model AuthorizationToken {
  id              Int    @id @default(autoincrement())
  user            User   @relation(fields: [userId], references: [id])
  userId          Int
  resource        String
  accessToken     String @db.LongText
  refreshToken    String? @db.LongText
  jagToken        String? @db.LongText
  idToken         String? @db.LongText
  expiresAt       DateTime?
  status          TokenStatus

  org       Organization    @relation(fields: [orgId], references: [id])
  orgId     Int

  // prisma is not letting me drop this index for some reason
  @@unique([userId, resource])

  @@unique([orgId, userId, resource])
}

model RequestLog {
  id              Int    @id @default(autoincrement())
  user            User   @relation(fields: [userId], references: [id])
  userId          Int
  org             Organization    @relation(fields: [orgId], references: [id])
  orgId           Int

  url             String
  requestHeaders  String @db.LongText
  responseBody    String @db.LongText
  requestedAt     DateTime

  @@index([orgId, userId, requestedAt(sort: Desc)])
}
